import { GoogleGenAI, Modality } from "@google/genai";

const API_KEY = process.env.API_KEY;
if (!API_KEY) {
  throw new Error("API_KEY environment variable is not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });
const model = "gemini-2.5-flash-image";

export const cartoonizeDrawing = async (base64Image: string): Promise<string> => {
  const prompt = "Turn this child's drawing into a cute and professional cartoon. Re-imagine it with clean lines, vibrant colors, and a fun personality, like a character from an animated movie. Use the original drawing as inspiration.";

  const imagePart = {
    inlineData: {
      mimeType: 'image/png',
      data: base64Image,
    },
  };

  const textPart = {
    text: prompt,
  };

  try {
    const response = await ai.models.generateContent({
      model: model,
      contents: { parts: [imagePart, textPart] },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        return part.inlineData.data;
      }
    }
    
    throw new Error("No image was generated by the API.");

  } catch (error) {
    console.error("Error calling Gemini API:", error);
    throw new Error("Failed to cartoonize the drawing.");
  }
};